-- This file is autogenerated. Do not edit this file manually. Your changes will be ignored.
-- More information: https://github.com/MWSE/MWSE/tree/master/docs

--- @meta
--- The ni library provides a set of enumerations used in various parts of the game.
--- @class nilib
ni = {}

ni.animationKeyType = require("ni.animationKeyType")

--- @alias ni.animationKeyType
---| `ni.animationKeyType.TCB`
---| `ni.animationKeyType.bezier`
---| `ni.animationKeyType.euler`
---| `ni.animationKeyType.linear`
---| `ni.animationKeyType.noInterp`
---| `ni.animationKeyType.tcb`

ni.animCycleType = require("ni.animCycleType")

--- @alias ni.animCycleType
---| `ni.animCycleType.clamp`
---| `ni.animCycleType.loop`
---| `ni.animCycleType.reverse`

ni.animType = require("ni.animType")

--- @alias ni.animType
---| `ni.animType.appInit`
---| `ni.animType.appTime`

ni.billboardMode = require("ni.billboardMode")

--- @alias ni.billboardMode
---| `ni.billboardMode.alwaysFaceCamera`
---| `ni.billboardMode.rigidFaceCamera`
---| `ni.billboardMode.rotateAboutUp`

ni.cameraClearFlags = require("ni.cameraClearFlags")

--- @alias ni.cameraClearFlags
---| `ni.cameraClearFlags.all`
---| `ni.cameraClearFlags.backBuffer`
---| `ni.cameraClearFlags.stencil`
---| `ni.cameraClearFlags.zBuffer`

ni.dynamicEffectType = require("ni.dynamicEffectType")

--- @alias ni.dynamicEffectType
---| `ni.dynamicEffectType.ambientLight`
---| `ni.dynamicEffectType.directionalLight`
---| `ni.dynamicEffectType.pointLight`
---| `ni.dynamicEffectType.spotLight`
---| `ni.dynamicEffectType.textureEffect`

ni.eulerRotKeyOrder = require("ni.eulerRotKeyOrder")

--- @alias ni.eulerRotKeyOrder
---| `ni.eulerRotKeyOrder.XYX`
---| `ni.eulerRotKeyOrder.XYZ`
---| `ni.eulerRotKeyOrder.XZY`
---| `ni.eulerRotKeyOrder.YXZ`
---| `ni.eulerRotKeyOrder.YZX`
---| `ni.eulerRotKeyOrder.YZY`
---| `ni.eulerRotKeyOrder.ZXY`
---| `ni.eulerRotKeyOrder.ZXZ`
---| `ni.eulerRotKeyOrder.ZYX`

ni.gravityForceType = require("ni.gravityForceType")

--- @alias ni.gravityForceType
---| `ni.gravityForceType.planar`
---| `ni.gravityForceType.spherical`

ni.lightingMode = require("ni.lightingMode")

--- @alias ni.lightingMode
---| `ni.lightingMode.emiAmbDif`
---| `ni.lightingMode.emissive`

ni.lookAtControllerAxis = require("ni.lookAtControllerAxis")

--- @alias ni.lookAtControllerAxis
---| `ni.lookAtControllerAxis.X`
---| `ni.lookAtControllerAxis.Y`
---| `ni.lookAtControllerAxis.Z`

ni.particleBombDecayType = require("ni.particleBombDecayType")

--- @alias ni.particleBombDecayType
---| `ni.particleBombDecayType.exponential`
---| `ni.particleBombDecayType.linear`
---| `ni.particleBombDecayType.none`

ni.particleBombSymmetryType = require("ni.particleBombSymmetryType")

--- @alias ni.particleBombSymmetryType
---| `ni.particleBombSymmetryType.cylindrical`
---| `ni.particleBombSymmetryType.planar`
---| `ni.particleBombSymmetryType.spherical`

ni.pickCoordinateType = require("ni.pickCoordinateType")

--- @alias ni.pickCoordinateType
---| `ni.pickCoordinateType.modelCoordinates`
---| `ni.pickCoordinateType.worldCoordinates`

ni.pickIntersectType = require("ni.pickIntersectType")

--- @alias ni.pickIntersectType
---| `ni.pickIntersectType.boundIntersect`
---| `ni.pickIntersectType.triangleIntersect`

ni.pickSortType = require("ni.pickSortType")

--- @alias ni.pickSortType
---| `ni.pickSortType.noSort`
---| `ni.pickSortType.sort`

ni.pickType = require("ni.pickType")

--- @alias ni.pickType
---| `ni.pickType.findAll`
---| `ni.pickType.findFirst`

ni.propertyType = require("ni.propertyType")

--- @alias ni.propertyType
---| `ni.propertyType.alpha`
---| `ni.propertyType.dither`
---| `ni.propertyType.firstPropertyType`
---| `ni.propertyType.fog`
---| `ni.propertyType.lastPropertyType`
---| `ni.propertyType.material`
---| `ni.propertyType.rendererSpecific`
---| `ni.propertyType.shade`
---| `ni.propertyType.specular`
---| `ni.propertyType.stencil`
---| `ni.propertyType.texturing`
---| `ni.propertyType.vertexColor`
---| `ni.propertyType.wireframe`
---| `ni.propertyType.zBuffer`

ni.sortAdjustMode = require("ni.sortAdjustMode")

--- @alias ni.sortAdjustMode
---| `ni.sortAdjustMode.grouped`
---| `ni.sortAdjustMode.inherit`
---| `ni.sortAdjustMode.off`
---| `ni.sortAdjustMode.subsort`

ni.sourceVertexMode = require("ni.sourceVertexMode")

--- @alias ni.sourceVertexMode
---| `ni.sourceVertexMode.ambDiff`
---| `ni.sourceVertexMode.emissive`
---| `ni.sourceVertexMode.ignore`

ni.stencilDrawMode = require("ni.stencilDrawMode")

--- @alias ni.stencilDrawMode
---| `ni.stencilDrawMode.both`
---| `ni.stencilDrawMode.clockwise`
---| `ni.stencilDrawMode.counterclockwise`
---| `ni.stencilDrawMode.counterclockwiseOrBoth`

ni.stencilTestAction = require("ni.stencilTestAction")

--- @alias ni.stencilTestAction
---| `ni.stencilTestAction.decrement`
---| `ni.stencilTestAction.increment`
---| `ni.stencilTestAction.invert`
---| `ni.stencilTestAction.keep`
---| `ni.stencilTestAction.replace`
---| `ni.stencilTestAction.zero`

ni.stencilTestFunction = require("ni.stencilTestFunction")

--- @alias ni.stencilTestFunction
---| `ni.stencilTestFunction.always`
---| `ni.stencilTestFunction.equal`
---| `ni.stencilTestFunction.greater`
---| `ni.stencilTestFunction.greaterEqual`
---| `ni.stencilTestFunction.less`
---| `ni.stencilTestFunction.lessEqual`
---| `ni.stencilTestFunction.never`
---| `ni.stencilTestFunction.notEqual`

ni.textureFormatPrefsAlphaFormat = require("ni.textureFormatPrefsAlphaFormat")

--- @alias ni.textureFormatPrefsAlphaFormat
---| `ni.textureFormatPrefsAlphaFormat.binary`
---| `ni.textureFormatPrefsAlphaFormat.default`
---| `ni.textureFormatPrefsAlphaFormat.none`
---| `ni.textureFormatPrefsAlphaFormat.smooth`

ni.textureFormatPrefsMipFlag = require("ni.textureFormatPrefsMipFlag")

--- @alias ni.textureFormatPrefsMipFlag
---| `ni.textureFormatPrefsMipFlag.default`
---| `ni.textureFormatPrefsMipFlag.no`
---| `ni.textureFormatPrefsMipFlag.yes`

ni.textureFormatPrefsPixelLayout = require("ni.textureFormatPrefsPixelLayout")

--- @alias ni.textureFormatPrefsPixelLayout
---| `ni.textureFormatPrefsPixelLayout.bumpMap`
---| `ni.textureFormatPrefsPixelLayout.compressed`
---| `ni.textureFormatPrefsPixelLayout.default`
---| `ni.textureFormatPrefsPixelLayout.highColor16`
---| `ni.textureFormatPrefsPixelLayout.palettized8`
---| `ni.textureFormatPrefsPixelLayout.trueColor32`

ni.texturingPropertyApplyMode = require("ni.texturingPropertyApplyMode")

--- @alias ni.texturingPropertyApplyMode
---| `ni.texturingPropertyApplyMode.decal`
---| `ni.texturingPropertyApplyMode.modulate`
---| `ni.texturingPropertyApplyMode.replace`

ni.texturingPropertyClampMode = require("ni.texturingPropertyClampMode")

--- @alias ni.texturingPropertyClampMode
---| `ni.texturingPropertyClampMode.clampSclampT`
---| `ni.texturingPropertyClampMode.clampSwrapT`
---| `ni.texturingPropertyClampMode.wrapSclampT`
---| `ni.texturingPropertyClampMode.wrapSwrapT`

ni.texturingPropertyFilterMode = require("ni.texturingPropertyFilterMode")

--- @alias ni.texturingPropertyFilterMode
---| `ni.texturingPropertyFilterMode.bilerp`
---| `ni.texturingPropertyFilterMode.bilerpMipNearest`
---| `ni.texturingPropertyFilterMode.nearest`
---| `ni.texturingPropertyFilterMode.nearestMipLerp`
---| `ni.texturingPropertyFilterMode.nearestMipNearest`
---| `ni.texturingPropertyFilterMode.trilerp`

ni.texturingPropertyMapType = require("ni.texturingPropertyMapType")

--- @alias ni.texturingPropertyMapType
---| `ni.texturingPropertyMapType.base`
---| `ni.texturingPropertyMapType.bump`
---| `ni.texturingPropertyMapType.dark`
---| `ni.texturingPropertyMapType.decal1`
---| `ni.texturingPropertyMapType.decal2`
---| `ni.texturingPropertyMapType.decal3`
---| `ni.texturingPropertyMapType.decal4`
---| `ni.texturingPropertyMapType.decal5`
---| `ni.texturingPropertyMapType.decal6`
---| `ni.texturingPropertyMapType.decal7`
---| `ni.texturingPropertyMapType.decalFirst`
---| `ni.texturingPropertyMapType.decalLast`
---| `ni.texturingPropertyMapType.detail`
---| `ni.texturingPropertyMapType.gloss`
---| `ni.texturingPropertyMapType.glow`

ni.type = require("ni.type")

--- @alias ni.type
---| `ni.type.AvoidNode`
---| `ni.type.BSMirroredNode`
---| `ni.type.BrickNiExtraData`
---| `ni.type.NiAVObject`
---| `ni.type.NiAccumulator`
---| `ni.type.NiAlphaAccumulator`
---| `ni.type.NiAlphaController`
---| `ni.type.NiAlphaProperty`
---| `ni.type.NiAmbientLight`
---| `ni.type.NiAutoNormalParticles`
---| `ni.type.NiAutoNormalParticlesData`
---| `ni.type.NiBSAnimationManager`
---| `ni.type.NiBSAnimationNode`
---| `ni.type.NiBSPArrayController`
---| `ni.type.NiBSPNode`
---| `ni.type.NiBSParticleNode`
---| `ni.type.NiBillboardNode`
---| `ni.type.NiBltSource`
---| `ni.type.NiCamera`
---| `ni.type.NiClusterAccumulator`
---| `ni.type.NiCollisionSwitch`
---| `ni.type.NiColorData`
---| `ni.type.NiDX8Renderer`
---| `ni.type.NiDirectionalLight`
---| `ni.type.NiDitherProperty`
---| `ni.type.NiDynamicEffect`
---| `ni.type.NiExtraData`
---| `ni.type.NiFlipController`
---| `ni.type.NiFloatController`
---| `ni.type.NiFloatData`
---| `ni.type.NiFltAnimationNode`
---| `ni.type.NiFogProperty`
---| `ni.type.NiGeomMorpherController`
---| `ni.type.NiGeometry`
---| `ni.type.NiGeometryData`
---| `ni.type.NiGravity`
---| `ni.type.NiKeyframeController`
---| `ni.type.NiKeyframeData`
---| `ni.type.NiKeyframeManager`
---| `ni.type.NiLODNode`
---| `ni.type.NiLight`
---| `ni.type.NiLightColorController`
---| `ni.type.NiLines`
---| `ni.type.NiLinesData`
---| `ni.type.NiLookAtController`
---| `ni.type.NiMaterialColorController`
---| `ni.type.NiMaterialProperty`
---| `ni.type.NiMorphData`
---| `ni.type.NiMorpherController`
---| `ni.type.NiNode`
---| `ni.type.NiObject`
---| `ni.type.NiObjectNET`
---| `ni.type.NiPalette`
---| `ni.type.NiParticleBomb`
---| `ni.type.NiParticleCollider`
---| `ni.type.NiParticleColorModifier`
---| `ni.type.NiParticleGrowFade`
---| `ni.type.NiParticleModifier`
---| `ni.type.NiParticleRotation`
---| `ni.type.NiParticleSystemController`
---| `ni.type.NiParticles`
---| `ni.type.NiParticlesData`
---| `ni.type.NiPathController`
---| `ni.type.NiPixelData`
---| `ni.type.NiPlanarCollider`
---| `ni.type.NiPointLight`
---| `ni.type.NiPosData`
---| `ni.type.NiProperty`
---| `ni.type.NiRenderedCubeMap`
---| `ni.type.NiRenderedTexture`
---| `ni.type.NiRenderer`
---| `ni.type.NiRendererSpecificProperty`
---| `ni.type.NiRollController`
---| `ni.type.NiRotatingParticles`
---| `ni.type.NiRotatingParticlesData`
---| `ni.type.NiScreenPolygon`
---| `ni.type.NiSequenceStreamHelper`
---| `ni.type.NiShadeProperty`
---| `ni.type.NiSkinData`
---| `ni.type.NiSkinInstance`
---| `ni.type.NiSkinPartition`
---| `ni.type.NiSortAdjustNode`
---| `ni.type.NiSourceTexture`
---| `ni.type.NiSpecularProperty`
---| `ni.type.NiSphericalCollider`
---| `ni.type.NiSpotLight`
---| `ni.type.NiStencilProperty`
---| `ni.type.NiStringExtraData`
---| `ni.type.NiSwitchNode`
---| `ni.type.NiTextKeyExtraData`
---| `ni.type.NiTexture`
---| `ni.type.NiTextureEffect`
---| `ni.type.NiTexturingProperty`
---| `ni.type.NiTimeController`
---| `ni.type.NiTriBasedGeom`
---| `ni.type.NiTriBasedGeomData`
---| `ni.type.NiTriShape`
---| `ni.type.NiTriShapeData`
---| `ni.type.NiTriShapeDynamicData`
---| `ni.type.NiTriStrips`
---| `ni.type.NiTriStripsData`
---| `ni.type.NiUVController`
---| `ni.type.NiUVData`
---| `ni.type.NiVertWeightsExtraData`
---| `ni.type.NiVertexColorProperty`
---| `ni.type.NiVisController`
---| `ni.type.NiVisData`
---| `ni.type.NiWireframeProperty`
---| `ni.type.NiZBufferProperty`
---| `ni.type.OffscreenSceneGraph_MasterPropertyAccumulator`
---| `ni.type.RootCollisionNode`
---| `ni.type.TES3ObjectExtraData`

ni.zBufferPropertyTestFunction = require("ni.zBufferPropertyTestFunction")

--- @alias ni.zBufferPropertyTestFunction
---| `ni.zBufferPropertyTestFunction.always`
---| `ni.zBufferPropertyTestFunction.equal`
---| `ni.zBufferPropertyTestFunction.greater`
---| `ni.zBufferPropertyTestFunction.greaterEqual`
---| `ni.zBufferPropertyTestFunction.less`
---| `ni.zBufferPropertyTestFunction.lessEqual`
---| `ni.zBufferPropertyTestFunction.never`
---| `ni.zBufferPropertyTestFunction.notEqual`

